{"version":3,"sources":["getShadowNodeFromRef.ts"],"names":["findHostInstance_DEPRECATED","_ref","require","e","getShadowNodeFromRef","ref","_internalInstanceHandle","stateNode","node"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA,IAAIA,2BAA2B,GAAIC,IAAD,IAAe,IAAjD;;AAEA,IAAI;AACF;AACAD,EAAAA,2BAA2B,GAAGE,OAAO,CAAC,mDAAD,CAAP,CAC3BF,2BADH;AAED,CAJD,CAIE,OAAOG,CAAP,EAAU,CACV;AACD;;AAEM,SAASC,oBAAT,CAA8BC,GAA9B,EAAwC;AAC7C;AACA,SAAOL,2BAA2B,CAACK,GAAD,CAA3B,CAAiCC,uBAAjC,CAAyDC,SAAzD,CACJC,IADH;AAED","sourcesContent":["// Used by GestureDetector (unsupported on web at the moment) to check whether the\n// attached view may get flattened on Fabric. This implementation causes errors\n// on web due to the static resolution of `require` statements by webpack breaking\n// the conditional importing. Solved by making .web file.\nlet findHostInstance_DEPRECATED = (_ref: any) => null;\n\ntry {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  findHostInstance_DEPRECATED = require('react-native/Libraries/Renderer/shims/ReactFabric')\n    .findHostInstance_DEPRECATED;\n} catch (e) {\n  // do nothing\n}\n\nexport function getShadowNodeFromRef(ref: any) {\n  // @ts-ignore Fabric\n  return findHostInstance_DEPRECATED(ref)._internalInstanceHandle.stateNode\n    .node;\n}\n"]}